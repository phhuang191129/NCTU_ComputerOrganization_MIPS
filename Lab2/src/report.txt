%Warning-IMPLICIT: single_cycle.v:117:12: Signal definition not found, creating implicitly: 'pc_step_4'
  117 |     assign pc_step_4 = pc + 32'd4;
      |            ^~~~~~~~~
                   ... For warning description see https://verilator.org/warn/IMPLICIT?v=5.024
                   ... Use "/* verilator lint_off IMPLICIT */" and lint_on around source to disable this message.
%Warning-IMPLICIT: single_cycle.v:144:13: Signal definition not found, creating implicitly: 'sign_extended'
  144 |      assign sign_extended = {{16{instr_mem_instr[15]}},instr_mem_instr[15:0]};
      |             ^~~~~~~~~~~~~
%Warning-IMPLICIT: single_cycle.v:150:13: Signal definition not found, creating implicitly: 'pc_src'
  150 |      assign pc_src = branch&alu_zero;
      |             ^~~~~~
%Warning-WIDTHEXPAND: alu.sv:33:28: Operator COND expects 32 bits on the Conditional True, but Conditional True's CONST '1'h1' generates 1 bits.
                                  : ... note: In instance 'single_cycle.alu'
   33 | assign carry_in = b_invert ? 1'b1 : 1'b0;
      |                            ^
                      single_cycle.v:56:1: ... note: In file included from 'single_cycle.v'
%Warning-WIDTHEXPAND: alu.sv:33:28: Operator COND expects 32 bits on the Conditional False, but Conditional False's CONST '1'h0' generates 1 bits.
                                  : ... note: In instance 'single_cycle.alu'
   33 | assign carry_in = b_invert ? 1'b1 : 1'b0;
      |                            ^
                      single_cycle.v:56:1: ... note: In file included from 'single_cycle.v'
%Warning-WIDTHEXPAND: alu.sv:50:24: Operator ASSIGN expects 32 bits on the Assign RHS, but Assign RHS's LTS generates 1 bits.
                                  : ... note: In instance 'single_cycle.alu'
   50 |                 result = $signed(a) < $signed(b);
      |                        ^
                      single_cycle.v:56:1: ... note: In file included from 'single_cycle.v'
%Warning-WIDTHTRUNC: single_cycle.v:117:22: Operator ASSIGNW expects 1 bits on the Assign RHS, but Assign RHS's ADD generates 32 bits.
                                          : ... note: In instance 'single_cycle'
  117 |     assign pc_step_4 = pc + 32'd4;
      |                      ^
%Warning-WIDTHTRUNC: single_cycle.v:143:21: Operator ASSIGNW expects 1 bits on the Assign RHS, but Assign RHS's COND generates 5 bits.
                                          : ... note: In instance 'single_cycle'
  143 |      assign reg_dst = (opcode==6'b0)?instr_mem_instr[15:11]:5'bX;
      |                     ^
%Warning-WIDTHTRUNC: single_cycle.v:144:27: Operator ASSIGNW expects 1 bits on the Assign RHS, but Assign RHS's REPLICATE generates 32 bits.
                                          : ... note: In instance 'single_cycle'
  144 |      assign sign_extended = {{16{instr_mem_instr[15]}},instr_mem_instr[15:0]};
      |                           ^
%Warning-WIDTHEXPAND: single_cycle.v:145:37: Operator COND expects 32 bits on the Conditional False, but Conditional False's VARREF 'sign_extended' generates 1 bits.
                                           : ... note: In instance 'single_cycle'
  145 |      assign alu_b = (alu_src ==1'b0)?reg_file_read_data_2:sign_extended;
      |                                     ^
%Warning-WIDTHEXPAND: single_cycle.v:151:37: Operator COND expects 32 bits on the Conditional True, but Conditional True's VARREF 'pc_step_4' generates 1 bits.
                                           : ... note: In instance 'single_cycle'
  151 |      assign pc_next = (pc_src==1'b0)?pc_step_4:pc_step_4+sign_extended<<2;
      |                                     ^
%Warning-WIDTHEXPAND: single_cycle.v:151:57: Operator ADD expects 32 bits on the LHS, but LHS's VARREF 'pc_step_4' generates 1 bits.
                                           : ... note: In instance 'single_cycle'
  151 |      assign pc_next = (pc_src==1'b0)?pc_step_4:pc_step_4+sign_extended<<2;
      |                                                         ^
%Warning-WIDTHEXPAND: single_cycle.v:151:57: Operator ADD expects 32 bits on the RHS, but RHS's VARREF 'sign_extended' generates 1 bits.
                                           : ... note: In instance 'single_cycle'
  151 |      assign pc_next = (pc_src==1'b0)?pc_step_4:pc_step_4+sign_extended<<2;
      |                                                         ^
%Error: Exiting due to 13 warning(s)
